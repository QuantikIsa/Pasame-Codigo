---
// Esta implentación de este componente es temporal, mi mejor intento por taer diagramas
// de Mermaid.js a esta web. Existen otras implementaciones nativas como:
// - https://github.com/withastro/starlight/discussions/1259#discussioncomment-9300105
// - https://astro-digital-garden.stereobooster.com/recipes/mermaid-diagrams-in-markdown/
// Pero requieren el uso de Playwright que no puede ser desplegado en Vercel
// Mientras se busca una implementación más óptima se esta usando esta.
// - https://xkonti.tech/blog/astro-mermaid-mdx/

// Problemas con esta implementación:
// - La necesidad de un codeblock oculto para extaer el código
// - La no actualización del diagrama con el cambio de tema, sin una recarga completa
// - La carga de javascript inecesario
---

<script>
  import mermaid from "mermaid";
  // Postpone mermaid initialization
  mermaid.initialize({ startOnLoad: false });

  function extractMermaidCode() {
    // Find all mermaid components
    const mermaidElements = document.querySelectorAll(
      "figure.expandable-diagram",
    );

    mermaidElements.forEach((element) => {
      // Find the `copy` button for each component
      const copyButton = element.querySelector(".copy button");

      // Ensure copyButton is an HTML element and has the dataset property
      if (copyButton instanceof HTMLElement && copyButton.dataset.code) {
        // Extract the code from the `data-code` attribute
        let code = copyButton.dataset.code;

        // Replace the U+007f character with `\n` (simulating new lines)
        code = code.replace(/\u007F/g, "\n");

        // Construct the `pre` element for the diagram code
        const preElement = document.createElement("pre");
        preElement.className = "mermaid not-prose";
        preElement.innerHTML = code;

        // Find the diagram content container
        const diagramContainer = element.querySelector(".diagram-content");

        // Ensure the diagramContainer and its firstChild exist before replacing
        if (diagramContainer && diagramContainer.firstChild) {
          diagramContainer.replaceChild(
            preElement,
            diagramContainer.firstChild,
          );
        }
      }
    });
  }

  // Wait for the DOM to be fully loaded
  document.addEventListener("DOMContentLoaded", async () => {
    extractMermaidCode();
    applyTheme();
  });

  // Función para aplicar el tema de la página en los diagramas
  const applyTheme = () => {
    const theme =
      document.documentElement.getAttribute("data-theme") === "dark"
        ? "dark"
        : "default";
    mermaid.initialize({
      theme,
      startOnLoad: true,
    });
  };
</script>

<figure class="expandable-diagram">
  <div class="diagram-content">Cargando diagrama...</div>

  <details>
    <summary>Código diagrama</summary>
    <slot />
  </details>
</figure>
